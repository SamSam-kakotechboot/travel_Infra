server {
    listen 80;
    server_name _;
    location / {
        proxy_pass http://127.0.0.1:30002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 8090;
    server_name _;

    # CORS 헤더 설정
    add_header 'Access-Control-Allow-Origin' 'http://ec2-3-35-149-168.ap-northeast-2.compute.amazonaws.com' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,credentials' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # 백엔드 API 요청 처리
    location ~ ^/(api|test|auth)/ {
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        proxy_pass http://192.168.2.107:8090;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Origin "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
    }
}
server {
    listen 8081;
    server_name _;

    location /github-webhook {
        proxy_pass http://192.168.2.107:8080/github-webhook;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}